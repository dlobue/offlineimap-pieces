NOTE: this is already implemented.


non-math method:
[
(content, {
          folder,uid: {
            cache: {present: bool, draft: bool, flagged: bool, passed: bool, replied: bool, seen: bool, trashed: bool},
            local: {present: bool, draft: bool, flagged: bool, passed: bool, replied: bool, seen: bool, trashed: bool},
            remote: {present: bool, draft: bool, flagged: bool, passed: bool, replied: bool, seen: bool, trashed: bool},
            },
          }j
]


M.fetch('60:100', '(UID FLAGS INTERNALDATE RFC822.SIZE BODY.PEEK[HEADER.FIELDS (Message-ID)])')


how to tell if a msg has been moved to another dir or renamed rather than deleted in maildir? - msg will have same filename if just moved, and have the same sha1 content hash
how to tell if a msg has been moved to another dir rather than deleted in IMAP? - imap fetch body.peek[header.fields[message-id]], internaldate and rfc822.size on all new uids found in first pass. if all match, good enough for me.
-- actually, there is no way to tell whether the message that we found is a copy of our instance of msg. it may be a different copy.
AGH
-- should this happen, move local copy to equiv location of remote copy and use remote's flags (no composition)




  D F P R S T
c 0 1 1 0 0 1
l 0 1 0 1 0 1
r 1 0 0 1 0 1

  1 0 0 1 0 1

 [0,0],[1,0],[1,0],[0,0],[0,0],[1,0]

^^^^^^^ how to calculate?

c 0 1 1 0 0 1
l 0 1 0 1 0 1

  S S 0 1 S S

c 0 1 1 0 0 1
r 1 0 0 1 0 1

  1 0 0 1 S S


  S S 0 1 S S
  1 0 0 1 S S

  1 0 0 1 P P



l 0 1 0 1 0 1
r 1 0 0 1 0 1

  D D S S S S



In [25]: a = [('d1','f1','p1','r1','s1','t1'),('d2','f2','p2','r2','s2','t2'),('d3','f3','p3','r3','s3','t3')]

In [26]: zip(*a)
Out[26]:
[('d1', 'd2', 'd3'),
 ('f1', 'f2', 'f3'),
 ('p1', 'p2', 'p3'),
 ('r1', 'r2', 'r3'),
 ('s1', 's2', 's3'),
 ('t1', 't2', 't3')]



In [16]: def comp4(a,b,c):
   ....:     a = a,0
   ....:     def _c(a,b):
   ....:         if a[1]: return a
   ....:         if a[0] is b:
   ....:             return a
   ....:         return b,1
   ....:     a = _c(a,b)
   ....:     a = _c(a,c)
   ....:     return a
   ....:




folders: z x v y
contents: a b c d e

REMEMBER! you are iterating over a list of folder contents, not over cache records
or should we? agh

process local folder z:
find uid 1
notice flags are different
((folder z, uid 1), (flags, [+r, +s])) -> into folder z so?


process local folder x
*****NO!!!!!
******notice uid 2 is gone
******(folder x, uid 2) -> into delq

on uid 4
notice addition of seen flag
((folder z, uid 4), (flags, [+s]))




iterate


remote:
-uid 1
content a
flags s
folder v
-uid 6
content d
flags
folder y
-uid 5
content b
flags rs
folder y
-uid 7
content e
flags
folder z



local:
-uid 1
content a
flags rs
folder z
-uid 2
content b
flags r
folder v
-uid 4
content d
flags rs
folder x







last sync cache:
-uid 1
content a
flags
folder z
-uid 2
content b
flags s
folder x
-uid 3
content c
flags s
folder v
-uid 4
content d
flags r
folder x
